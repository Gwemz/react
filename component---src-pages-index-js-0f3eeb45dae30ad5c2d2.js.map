{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/container.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_container__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_ref","data","console","log","a","createElement","allMarkdownRemark","totalCount","edges","map","_ref2","node","key","id","className","to","fields","slug","frontmatter","title","color","date","excerpt","children","style","margin","maxWidth"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,IAAAU,EAAAV,EAAAO,EAAAE,GAAAT,EAAA,KA8DeE,EAAA,iBAAAS,GAAc,IAAXC,EAAWD,EAAXC,KAEhB,OADAC,QAAQC,IAAIF,GAEVN,EAAAS,EAAAC,cAACR,EAAA,EAAD,KACIF,EAAAS,EAAAC,cAAA,WACAV,EAAAS,EAAAC,cAAA,0BAGAV,EAAAS,EAAAC,cAAA,cACMJ,EAAKK,kBAAkBC,WAD7B,QAGCN,EAAKK,kBAAkBE,MAAMC,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAC9BhB,EAAAS,EAAAC,cAAA,OAAKO,IAAKD,EAAKE,GAAIC,UAAU,WACzBnB,EAAAS,EAAAC,cAACN,EAAAK,EAAD,CAAMW,GAAIJ,EAAKK,OAAOC,MAClBtB,EAAAS,EAAAC,cAAA,UACKM,EAAKO,YAAYC,MAAO,IACzBxB,EAAAS,EAAAC,cAAA,QAAMe,MAAM,QAAZ,KAAsBT,EAAKO,YAAYG,OAE3C1B,EAAAS,EAAAC,cAAA,SACKM,EAAKW,gBAUvB,IAAM7B,EAAK,8CC3FlB,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAEeH,EAAA,WAAAS,GAAA,IAAGuB,EAAHvB,EAAGuB,SAAH,OACb5B,EAAAS,EAAAC,cAAA,OAAKmB,MAAO,CAAEC,OAAQ,YAAaC,SAAU,OAC1CH","file":"component---src-pages-index-js-0f3eeb45dae30ad5c2d2.js","sourcesContent":["// import React from \"react\"\r\n// import Container from \"../components/container\"\r\n// import Link from \"gatsby-link\"\r\n\r\n// export default ({data}) =>\r\n//   <Container>\r\n//     <h1>什么是单页应用</h1>\r\n//     <h2>{data.site.siteMetadata.title}</h2>\r\n//     <div>\r\n//       <p>\r\n//       在早期的 Web 应用中，前端的作用很弱，业务逻辑和数据处理都在后端，后端给前端返回一个 HTML 页面，前端只负责展示。在这种模式下，单个 HTML 页面被当做一个功能原件，表单提交，超链接跳转都可以用来重新请求新的 HTML 页面，从而达到给用户展示新的页面的目的。在这种方式中，你可以感觉到页面总是在不停的刷新，一个点击可能都需要等待很久，这是因为，当页面变化时，所有资源都需要重新请求。这些问题导致了用户体验不佳，也浪费了资源。单页应用便很好的解决了这些问题。\r\n//       </p>\r\n//       <p>\r\n//         From Richard Hamming’s classic and must-read talk, “<a href=\"http://www.cs.virginia.edu/~robins/YouAndYourResearch.html\">\r\n//           You and Your Research\r\n//         </a>”.\r\n//       </p>\r\n//       <blockquote>\r\n//         <p>\r\n//           There is indeed an element of luck, and no, there isn’t. The prepared\r\n//           mind sooner or later finds something important and does it. So yes, it\r\n//           is luck.{\" \"}\r\n//           <em>\r\n//             The particular thing you do is luck, but that you do something is\r\n//             not.\r\n//           </em>\r\n//         </p>\r\n//       </blockquote>\r\n//       <div>\r\n//         <Link to=\"/about-css-modules\">about-css-modules</Link>\r\n//       </div>\r\n//       <div>\r\n//         <Link to=\"/about-glamour\">about-glamour</Link>\r\n//       </div>\r\n//       <div>\r\n//         <Link to=\"/about-styled-components\">about-styled-components</Link>\r\n//       </div>\r\n//       <div>\r\n//         <Link to=\"/about\">about</Link>\r\n//       </div>\r\n//       <div>\r\n//         <Link to=\"contact\">contact</Link>\r\n//       </div>\r\n//     </div>\r\n//     <p>Posted April 09, 2011</p>\r\n//   </Container>  \r\n\r\n// export const query = graphql`\r\n// query AboutQuery {\r\n//   site {\r\n//     siteMetadata {\r\n//       title\r\n//     }\r\n//   }\r\n// }\r\n// `  \r\n\r\nimport React from \"react\"\r\nimport Container from \"../components/container\"\r\nimport Link from \"gatsby-link\"\r\nimport styles from \"./styles.css\"\r\n\r\nexport default ({ data }) => {\r\n  console.log(data)\r\n  return (\r\n    <Container>\r\n        <div>\r\n        <h1>\r\n            winter blog!\r\n        </h1>\r\n        <h4>\r\n            共{data.allMarkdownRemark.totalCount} 篇文章\r\n        </h4>\r\n        {data.allMarkdownRemark.edges.map(({ node }) =>\r\n            <div key={node.id} className=\"article\">\r\n                <Link to={node.fields.slug}>\r\n                    <h3>\r\n                        {node.frontmatter.title}{\" \"}\r\n                        <span color=\"#BBB\">— {node.frontmatter.date}</span>\r\n                    </h3>\r\n                    <p>\r\n                        {node.excerpt}\r\n                    </p>\r\n                </Link>\r\n            </div>\r\n        )}\r\n        </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query IndexQuery {\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt\r\n          html\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import React from \"react\"\r\n\r\nexport default ({ children }) =>\r\n  <div style={{ margin: \"3rem auto\", maxWidth: 1200 }}>\r\n    {children}\r\n  </div>"],"sourceRoot":""}