{"data":{"markdownRemark":{"html":"<h2>前言</h2>\n<p>如你所见，这是一个博客，基于gatsby构建，是一个单页面应用</p>\n<p>在早期的 Web 应用中，前端的作用很弱，业务逻辑和数据处理都在后端，后端给前端返回一个 HTML 页面，前端只负责展示。在这种模式下，单个 HTML 页面被当做一个功能原件，表单提交，超链接跳转都可以用来重新请求新的 HTML 页面，从而达到给用户展示新的页面的目的。在这种方式中，你可以感觉到页面总是在不停的刷新，一个点击可能都需要等待很久，这是因为，当页面变化时，所有资源都需要重新请求。这些问题导致了用户体验不佳，也浪费了资源。单页应用便很好的解决了这些问题。</p>\n<h2>概念</h2>\n<p>什么是单页应用呢？单页应用的全称是 single-page application，简称 SPA，它是一种网站应用的模型，它可以动态重写当前的页面来与用户交互，而不需要重新加载整个页面。单页应用的流畅性让 Web 应用更像桌面端或 Native 应用了。相对于传统的 Web 应用，单页应用做到了前后端分离，后端只负责处理数据提供接口，页面逻辑和页面渲染都交给了前端。前端发展到现在，单页应用的使用已经很广泛，目前时兴的 React、Vue、Angular 等前端框架均采用了 SPA 原则。单页应用意味着前端掌握了主动权，也让前端代码更复杂和庞大，模块化、组件化以及架构设计都变得越来越重要。</p>\n<p>来体验一下单页应用吧，打开你的 Gmail，点击左侧的导航栏，在开发者工具的 Network 中可以看到资源是按需加载的，此时页面也并没有刷新，观察 Elements 栏下的 HTML，你会发现整个 HTML 的大框架是不变的，页面改变时，或者说路由改变时，DOM 树只是改变它需要改变的部分，也就是动态改变。</p>","frontmatter":{"title":"什么是单页应用","date":"2019-02-23"}}},"pageContext":{"slug":"/20150223/"}}